library(GAS)

dados <- read.csv('6_Portfolios_2x3.CSV', header = T)

inSample <- dados[1:190,]
outSample <- dados[190:nrow(dados),]

#Media e matriz de cov amostral--------

meanSample <- apply(inSample[,2:ncol(inSample)], 2, mean)

matrixCovSample <- cov(inSample[,2:ncol(inSample)])

#GAS ---------------------------

specf <- MultiGASSpec()
fit <- MultiGASFit(GASSpec = specf, data = inSample[,2:ncol(inSample)] )

meanGAS <- fit@Estimates$Moments$mean[190,]
covGAS <- fit@Estimates$Moments$cov[,,190]


#otim--------

w <- rep(0, ncol(inSample)-1)

CRRA <- function(w, M1, M2, v,...){
  muP <- t(w)%*%M1
  sig2P <- t(w)%*%M2%*%w
  m1P <- muP
  m2P <- sig2P + muP^2
  ut <- - (( 1/(1-v) ) + m1P - (v * m2P/2))
  return(ut)
}

wOtim <- optim(par = w, 
               fn = CRRA, 
               M1 = meanGAS, 
               M2 = covGAS,
               v = 5)$par



library(quadprog)

uns <-as.matrix(rep(1, 6)) 
otim <- solve.QP(covGAS, meanGAS, uns, 1 )$solution
sum(otim)

sum(otim*outSample[1, 2:7])
sum(outSample[1, 2:7])/6

suppressWarnings(library(CVXR, warn.conflicts=FALSE))

constrain <- sum(w) == 1
problem <- Problem(CRRA, constraints = list(constrain))
result <- solve(problem)
result <- solve(problem)