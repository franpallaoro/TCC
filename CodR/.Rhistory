data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "2006-07-01" &  data$date <="2019-12-01", -1]
returnPortGASnormal100CRRA <- vector()
for (i in 1:nrow(data) - window) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
returnPortGASnormal100CRRA <- c(returnPortGASnormal100CRRA,
returnP(wOptim = optimW(N = N,
mean = mean,
cov = cov, v = v),
data = data, j = j))
}
metricsPortGASnomal100CRRA <- metrics(returnPortGASnormal100CRRA)
system("xdg-open 'https://www.youtube.com/watch?v=TOamHghGCfg'")
window <- 150
v <- 5
specf <- MultiGASSpec()
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "2006-07-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "2000-01-01" &  data$date <="2019-12-01", -1]
nrow(data) - window
window <- 150
v <- 5
specf <- MultiGASSpec()
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "2000-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortGASnormal6CRRA <- vector()
for (i in 1:nrow(data) - window) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
returnPortGASnormal6CRRA <- c(returnPortGASnormal6CRRA,
returnP(wOptim = optimW(N = N,
mean = mean,
cov = cov, v = v),
data = data, j = j))
}
#-----------
meanteste <- apply(data, 2, mean)
vartest <- cov(data)
library(CVXR)
peso <- Variable(6)
peso <- Variable(6)
objective <- Maximize( ( 1/(1-5) ) +
(t(peso)%*%meanteste) -
(5 * ( (t(peso)%*%vartest%*%peso) +
(t(peso)%*%meanteste)^2 )/2))
View(CRRA)
library(CVXR)
quad_form(w, cov)
peso <- Variable(6)
objective <- Maximize( ( 1/(1-5) ) +
(t(peso)%*%meanteste) -
(5 * ( (t(peso)%*%vartest%*%peso) +
(t(peso)%*%meanteste)^2 )/2))
r <- quad_form(peso, vastest)
r <- quad_form(peso, vartest)
objective <- Maximize( ( 1/(1-5) ) +
(t(peso)%*%meanteste) -
(5 * ( (r) +
(t(peso)%*%meanteste)^2 )/2))
problem <- Problem(objective)
result <- solve(problem)
result
peso <- Variable(6)
r <- quad_form(peso, vartest)
objective <- Maximize( ( 1/(1-5) ) +
(t(peso)%*%meanteste) -
(5 * ( (r) +
(t(peso)%*%meanteste)^2 )/2))
constraints <- list(peso >= 0, sum(peso) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
result
result$getValue(w)
result$getValue(peso)
optimW <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( ( 1/(1-v) ) +
(t(w)%*%mean) - (v * ( (r) + (t(w)%*%mean)^2 )/2) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
woptim <- result$getValue(w)
return(woptim)
}
optimWCRRA <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( ( 1/(1-v) ) +
(t(w)%*%mean) - (v * ( (r) + (t(w)%*%mean)^2 )/2) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
woptim <- result$getValue(w)
return(wOptim)
}
optimWCRRA <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( ( 1/(1-v) ) +
(t(w)%*%mean) - (v * ( (r) + (t(w)%*%mean)^2 )/2) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
woptim <- result$getValue(w)
return(wOptim)
}
optimWCRRA <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( ( 1/(1-v) ) +
(t(w)%*%mean) - (v * ( (r) + (t(w)%*%mean)^2 )/2) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
woptim <- result$getValue(w)
return(wOptim)
}
optimWMeanVar <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r - (1/v * t(w)%*%mean)  )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
woptim <- result$getValue(w)
return(wOptim)
}
optimWMinVar <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
woptim <- result$getValue(w)
return(wOptim)
}
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "2000-01-01" &  data$date <="2019-12-01", -1]
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1990-01-01" &  data$date <="2019-12-01", -1]
data <- data[data$date >= "1990-01-01" &  data$date <="2019-12-01", -1]
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1990-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
window <- 250
v <- 5
specf <- MultiGASSpec()
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
window <- 250
v <- 5
specf <- MultiGASSpec()
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1996-01-01" &  data$date <="2019-12-01", -1]
window <- 200
v <- 5
specf <- MultiGASSpec()
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
estSample <- function(data,i,j,...){
meanSample <- apply(data[i:j,], 2, mean)
matrixCovSample <- cov(data[i:j,])
return(list(mean = meanSample, matrixCov = matrixCovSample))
}
optimWCRRA <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( ( 1/(1-v) ) +
(t(w)%*%mean) - (v * ( (r) + (t(w)%*%mean)^2 )/2) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
woptim <- result$getValue(w)
return(wOptim)
}
optimWMeanVar <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r - (1/v * t(w)%*%mean)  )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
woptim <- result$getValue(w)
return(wOptim)
}
optimWMinVar <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
woptim <- result$getValue(w)
return(wOptim)
}
estGAS <- function(specf, data, i, j, nWin, ...){
fit <- MultiGASFit(GASSpec = specf, data = data[i:j,])
meanGAS <- fit@Estimates$Moments$mean[nWin,]
matrixCovGAS <- fit@Estimates$Moments$cov[,,nWin]
return(list(mean = meanGAS, matrixCov = matrixCovGAS))
}
returnP <- function(wOptim, data, j, ....){
rp <- sum(wOptim*data[j+1,])
return(rp)
}
library(GAS)
#fixed objects ------------------
window <- 200
v <- 5
specf <- MultiGASSpec()
# 6 portfolio ----------------
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortGASnormal6CRRA <- vector()
for (i in 1:(nrow(data) - window)) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
returnPortGASnormal6CRRA <- c(returnPortGASnormal6CRRA,
returnP(wOptim = optimWCRRA(N = N,
mean = mean,
cov = cov, v = v),
data = data, j = j))
returnPortGASnormal6MeanVar <- c(returnPortGASnormal6MeanVar,
returnP(wOptim = optimWMeanVar(N = N,
mean = mean,
cov = cov,
v = v),
data = data, j = j))
returnPortGASnormal6MinVar <- c(returnPortGASnormal6MinVar,
returnP(wOptim = optimWMinVar(N = N,
mean = mean,
cov = cov,
v = v),
data = data, j = j))
}
# 25 portfolio -----------------------------
data <- read.csv('data25.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "2000-01-01" &  data$date <="2019-12-01", -1]
returnPortGASnormal25CRRA <- vector()
for (i in 1:(nrow(data) - window)) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
returnPortGASnormal25CRRA <- c(returnPortGASnormal25CRRA,
returnP(wOptim = optimWCRRA(N = N,
mean = mean,
cov = cov, v = v),
data = data, j = j))
returnPortGASnormal25MeanVar <- c(returnPortGASnormal25MeanVar,
returnP(wOptim = optimWMeanVar(N = N,
mean = mean,
cov = cov,
v = v),
data = data, j = j))
returnPortGASnormal25MinVar <- c(returnPortGASnormal25MinVar,
returnP(wOptim = optimWMinVar(N = N,
mean = mean,
cov = cov,
v = v),
data = data, j = j))
}
#100 portfolio -------------------------
data <- read.csv('data100.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "2000-01-01" &  data$date <="2019-12-01", -1]
returnPortGASnormal100CRRA <- vector()
for (i in 1:(nrow(data) - window)) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
returnPortGASnormal100CRRA <- c(returnPortGASnormal100CRRA,
returnP(wOptim = optimWCRRA(N = N,
mean = mean,
cov = cov, v = v),
data = data, j = j))
returnPortGASnormal100MeanVar <- c(returnPortGASnormal100MeanVar,
returnP(wOptim = optimWMeanVar(N = N,
mean = mean,
cov = cov,
v = v),
data = data, j = j))
returnPortGASnormal100MinVar <- c(returnPortGASnormal100MinVar,
returnP(wOptim = optimWMinVar(N = N,
mean = mean,
cov = cov,
v = v),
data = data, j = j))
}
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
mean
cov <- est[[2]]
View(estGAS)
View(estGAS)
View(estGAS)
View(estGAS)
estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
class(data)
apply(data, 2, claa)
apply(data, 2, class)
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
apply(data, 2, class)
apply(data, 2, class)
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
optimWCRRA(N = N,
mean = mean,
cov = cov, v = v)
View(optimWCRRA)
optimWCRRA <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( ( 1/(1-v) ) +
(t(w)%*%mean) - (v * ( (r) + (t(w)%*%mean)^2 )/2) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
wOptim <- result$getValue(w)
return(wOptim)
}
optimWMeanVar <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r - (1/v * t(w)%*%mean)  )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
wOptim <- result$getValue(w)
return(wOptim)
}
optimWMinVar <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
wOptim <- result$getValue(w)
return(wOptim)
}
optimWCRRA(N = N,
mean = mean,
cov = cov, v = v)
optimWMeanVar(N = N,
mean = mean,
cov = cov,
v = v)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r - (1/v * t(w)%*%mean)  )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
result <- solve(problem, gp = TRUE)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r - (v * t(w)%*%mean)  )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r - (v * t(mean)%*%w)  )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
10^seq(-2, 3, length.out = SAMPLES)
10^seq(-2, 3, length.out = 10)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r - (t(mean)%*%w)  )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
N=6
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r - (t(mean)%*%w)  )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
solve(problem)
w <- Variable(N)
objective <- Maximize( quad_form(w, cov) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
result <- solve(problem, gp = TRUE)
result <- solve(problem, gp = TRUE)
result <- solve(problem, gp = FALSE)
result <- solve(problem, gp = TRUE)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( ( 1/(1-v) ) +
(t(w)%*%mean) - (v * ( (r) + (t(w)%*%mean)^2 )/2) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( quad_form(w, cov) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective)
result <- solve(problem)
w <- Variable(N)
objective <- Minimize( -quad_form(w, cov) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
## Problem data
set.seed(10)
n <- 10
SAMPLES <- 100
mu <- matrix(abs(rnorm(n)), nrow = n)
mu
Sigma <- matrix(rnorm(n^2), nrow = n, ncol = n)
Sigma <- t(Sigma) %*% Sigma
Sigma
t(mu)
mean
w <- Variable(N)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( r - (mean%*%w)  )
objective <- Maximize( r - (t(mean)%*%w)  )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
estGAS <- function(specf, data, i, j, nWin, ...){
fit <- MultiGASFit(GASSpec = specf, data = data[i:j,])
meanGAS <- fit@Estimates$Moments$mean[nWin,]
matrixCovGAS <- fit@Estimates$Moments$cov[,,nWin]
return(list(mean = meanGAS, matrixCov = matrixCovGAS))
}
specf <- MultiGASSpec()
window <- 200
i=1
j=200
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
w <- Variable(6)
r <- quad_form(w, cov)
objective <- Maximize( quad_form(w, cov) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
