window <- 200
v <- 5
specf <- MultiGASSpec()
# 6 portfolio ----------------
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortGASnormal6CRRA <- vector()
returnPortGASnormal6MeanVar <- vector()
returnPortGASnormal6MinVar <- vector()
for (i in 1:(nrow(data) - window)) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
returnPortGASnormal6CRRA <- c(returnPortGASnormal6CRRA,
returnP(wOptim = optimWCRRA(N = N,
mean = mean,
cov = cov, v = v),
data = data, j = j))
returnPortGASnormal6MeanVar <- c(returnPortGASnormal6MeanVar,
returnP(wOptim = optimWMeanVar(N = N,
mean = mean,
cov = cov,
v = v),
data = data, j = j))
returnPortGASnormal6MinVar <- c(returnPortGASnormal6MinVar,
returnP(wOptim = optimWMinVar(N = N,
mean = mean,
cov = cov,
v = v),
data = data, j = j))
}
returnPortGASnormal6CRRA
returnPortGASnormal6MeanVar
returnPortGASnormal6MinVar
returnPortGASt6CRRA
metrics <- function(x){
meanR <- mean(x)*sqrt(12)
sdR <- sd(x)*sqrt(12)
SR <- meanR/sdR
return(meanR, sdR, SR)
}
?mean
?sd
#função -------------
metrics <- function(x){
meanR <- mean(x, na.rm = T)*sqrt(12)
sdR <- sd(x, na.rm = T)*sqrt(12)
SR <- meanR/sdR
return(meanR, sdR, SR)
}
dataPort6 <- data.frame(returnPortEW6, returnPortGASnormal6CRRA,
returnPortGASnormal6MeanVar,
returnPortGASnormal6MinVar,
returnPortGASt6CRRA, returnPortGASt6MeanVar,
returnPortGASt6MinVar, returnPortSample6CRRA,
returnPortSample6MeanVar, returnPortSample6MinVar)
apply(dataPort6, 2, metrics)
#função -------------
metrics <- function(x){
meanR <- mean(x, na.rm = T)*sqrt(12)
sdR <- sd(x, na.rm = T)*sqrt(12)
SR <- meanR/sdR
return(list(meanR, sdR, SR))
}
apply(dataPort6, 2, metrics)
#função -------------
metrics <- function(x){
meanR <- mean(x, na.rm = T)*sqrt(12)
sdR <- sd(x, na.rm = T)*sqrt(12)
SR <- meanR/sdR
return(list(meanR = meanR, sdR = sdR, SR = SR))
}
apply(dataPort6, 2, metrics)
table(apply(dataPort6, 2, metrics))
unlist(apply(dataPort6, 2, metrics))
table(unlist(apply(dataPort6, 2, metrics)))
metricsPort6 <- unlist(apply(dataPort6, 2, metrics))
metricsPort6 <- as.data.frame(unlist(apply(dataPort6, 2, metrics)))
View(metricsPort6)
metricsPort6 <- t(as.data.frame(unlist(apply(dataPort6, 2, metrics))))
View(metricsPort6)
write.csv(metricsPort6, file = "metricsPort6")
write.csv(dataPort6, file = "dataPort6")
save.image()
View(estGAS)
estSample <- function(data,i,j,...){
meanSample <- apply(data[i:j,], 2, mean)
matrixCovSample <- cov(data[i:j,])
return(list(mean = meanSample, matrixCov = matrixCovSample))
}
estGAS <- function(specf, data, i, j, nWin, ...){
fit <- MultiGASFit(GASSpec = specf, data = data[i:j,])
meanGAS <- fit@Estimates$Moments$mean[nWin,]
matrixCovGAS <- fit@Estimates$Moments$cov[,,nWin]
return(list(mean = meanGAS, matrixCov = matrixCovGAS))
}
optimWCRRA <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Maximize( ( 1/(1-v) ) +
(t(w)%*%mean) - (v * ( (r) + (t(w)%*%mean)^2 )/2) )
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
wOptim <- result$getValue(w)
return(wOptim)
}
optimWMeanVar <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Minimize( r - ((1/v) * t(mean)%*%w))
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
wOptim <- result$getValue(w)
return(wOptim)
}
optimWMinVar <- function(N, mean, cov, v, ...){
library(CVXR)
w <- Variable(N)
r <- quad_form(w, cov)
objective <- Minimize(r)
constraints <- list(w >= 0, sum(w) == 1)
problem <- Problem(objective, constraints)
result <- solve(problem)
wOptim <- result$getValue(w)
return(wOptim)
}
returnP <- function(wOptim, data, j, ....){
rp <- sum(wOptim*data[j+1,])
return(rp)
}
library(GAS)
#fixed objects ------------------
window <- 200
v <- 5
# 6 portfolio ----------------
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortSample6CRRA <- vector()
returnPortSample6MeanVar <- vector()
returnPortSample6MinVar <- vector()
wOptimSample6CRRA <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimSample6MinVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimSample6MeanVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
for (i in 1:(nrow(data) - window)) {
i = i
j = i + window
est <- estSample(data = data, i = i, j = j)
mean <- est[[1]]
cov <- est[[2]]
wOptimSample6CRRA[i,] <- optimWCRRA(N = N, mean = mean, cov = cov, v = v)
returnPortSample6CRRA <- c(returnPortSample6CRRA,
returnP(wOptim =wOptimSample6CRRA[i,],
data = data, j = j))
wOptimSample6MeanVar[i,] <- optimWMeanVar(N = N, mean = mean,
cov = cov, v = v)
returnPortSample6MeanVar <- c(returnPortSample6MeanVar,
returnP(wOptim = wOptimSample6MeanVar[i,],
data = data, j = j))
wOptimSample6MinVar[i,] <- optimWMinVar(N = N, mean = mean, cov = cov, v = v)
returnPortSample6MinVar <- c(returnPortSample6MinVar,
returnP(wOptim = wOptimSample6MinVar[i,],
data = data, j = j))
}
system("xdg-open 'https://www.youtube.com/watch?v=lPPhb49rrRk'")
window <- 200
v <- 5
specf <- MultiGASSpec()
# 6 portfolio ----------------
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortGASnormal6CRRA <- vector()
returnPortGASnormal6MeanVar <- vector()
returnPortGASnormal6MinVar <- vector()
wOptimGASnormal6CRRA <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimGASnormal6MinVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimGASnormal6MeanVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
for (i in 1:(nrow(data) - window)) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
wOptimGASnormal6CRRA[i,] <- optimWCRRA(N = N, mean = mean, cov = cov, v = v)
returnPortGASnormal6CRRA <- c(returnPortGASnormal6CRRA,
returnP(wOptim = wOptimGASnormal6CRRA[i,],
data = data, j = j))
wOptimGASnormal6MeanVar[i,] <- optimWMeanVar(N = N, mean = mean,
cov = cov, v = v)
returnPortGASnormal6MeanVar <- c(returnPortGASnormal6MeanVar,
returnP(wOptim = wOptimGASnormal6MeanVar[i,],
data = data, j = j))
wOptimGASnormal6MinVar[i,] <- optimWMinVar(N = N, mean = mean,
cov = cov, v = v)
returnPortGASnormal6MinVar <- c(returnPortGASnormal6MinVar,
returnP(wOptim = wOptimGASnormal6MinVar[i,],
data = data, j = j))
}
system("xdg-open 'https://www.youtube.com/watch?v=lPPhb49rrRk'")
window <- 200
v <- 5
specf <- MultiGASSpec(Dist = "mvt")
# 6 portfolio ----------------
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortGASt6CRRA <- vector()
returnPortGASt6MeanVar <- vector()
returnPortGASt6MinVar <- vector()
wOptimGASt6CRRA <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimGASt6MinVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimGASt6MeanVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
for (i in 38:(nrow(data) - window)) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
wOptimGASt6CRRA[i,] <- optimWCRRA(N = N, mean = mean, cov = cov, v = v)
returnPortGASt6CRRA <- c(returnPortGASt6CRRA,
returnP(wOptim = wOptimGASt6CRRA[i,],
data = data, j = j))
wOptimGASt6MeanVar[i,] <- optimWMeanVar(N = N, mean = mean, cov = cov, v = v)
returnPortGASt6MeanVar <- c(returnPortGASt6MeanVar,
returnP(wOptim = wOptimGASt6MeanVar[i,],
data = data, j = j))
wOptimGASt6MinVar[i,] <- optimWMinVar(N = N, mean = mean, cov = cov, v = v)
returnPortGASt6MinVar <- c(returnPortGASt6MinVar,
returnP(wOptim = wOptimGASt6MinVar[i,],
data = data, j = j))
}
View(wOptimGASt6MeanVar)
window <- 200
v <- 5
specf <- MultiGASSpec(Dist = "mvt")
# 6 portfolio ----------------
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortGASt6CRRA <- vector()
returnPortGASt6MeanVar <- vector()
returnPortGASt6MinVar <- vector()
wOptimGASt6CRRA <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimGASt6MinVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimGASt6MeanVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
for (i in 1:(nrow(data) - window)) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
wOptimGASt6CRRA[i,] <- optimWCRRA(N = N, mean = mean, cov = cov, v = v)
returnPortGASt6CRRA <- c(returnPortGASt6CRRA,
returnP(wOptim = wOptimGASt6CRRA[i,],
data = data, j = j))
wOptimGASt6MeanVar[i,] <- optimWMeanVar(N = N, mean = mean, cov = cov, v = v)
returnPortGASt6MeanVar <- c(returnPortGASt6MeanVar,
returnP(wOptim = wOptimGASt6MeanVar[i,],
data = data, j = j))
wOptimGASt6MinVar[i,] <- optimWMinVar(N = N, mean = mean, cov = cov, v = v)
returnPortGASt6MinVar <- c(returnPortGASt6MinVar,
returnP(wOptim = wOptimGASt6MinVar[i,],
data = data, j = j))
}
View(wOptimGASt6MinVar)
View(wOptimGASt6MinVar)
View(wOptimGASt6MinVar)
View(wOptimGASt6MinVar)
View(wOptimGASt6MeanVar)
View(wOptimGASt6CRRA)
for (i in 38:(nrow(data) - window)) {
i = i
j = i + window
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
wOptimGASt6CRRA[i,] <- optimWCRRA(N = N, mean = mean, cov = cov, v = v)
returnPortGASt6CRRA <- c(returnPortGASt6CRRA,
returnP(wOptim = wOptimGASt6CRRA[i,],
data = data, j = j))
wOptimGASt6MeanVar[i,] <- optimWMeanVar(N = N, mean = mean, cov = cov, v = v)
returnPortGASt6MeanVar <- c(returnPortGASt6MeanVar,
returnP(wOptim = wOptimGASt6MeanVar[i,],
data = data, j = j))
wOptimGASt6MinVar[i,] <- optimWMinVar(N = N, mean = mean, cov = cov, v = v)
returnPortGASt6MinVar <- c(returnPortGASt6MinVar,
returnP(wOptim = wOptimGASt6MinVar[i,],
data = data, j = j))
}
aux1 <- returnPortGASt6CRRA[1:36]
aux2 <- returnPortGASt6CRRA[37:63]
returnPortGASnormal6CRRA <- c(aux1, NA, aux2)
dataWPort6 <- list(wOptimGASnormal6CRRA, wOptimGASnormal6MeanVar,
wOptimGASnormal6MinVar, wOptimGASt6CRRA,
wOptimGASt6MeanVar, wOptimGASt6MinVar, wOptimSample6CRRA,
wOptimSample6MeanVar, wOptimSample6MinVar)
write.csv(dataWPort6, file = "dataWPort6")
dataWPort6
turnover <- function(w, l, N){
difW <- matrix(NA, ncol = N, nrow = l-1)
for (i in 1:(l - 1)) {
difW[i,] <- abs(w[i+1,] - w[i,])
}
turnover <- mean(colSums(difW, na.rm = T), na.rm = T)
return(turnover)
}
l <- nrow(data) - window
turnoverPort6 <- vector()
for (i in 1:9) {
turnoverPort6[i] <- turnover(dataWPort6[[i]], l, N)
}
turnoverPort6
turnover <- function(w, l, N){
difW <- matrix(NA, ncol = N, nrow = l-1)
for (i in 1:(l - 1)) {
difW[i,] <- abs(w[i+1,] - w[i,])
}
turnover <- sum(difW)/(l-1)
return(turnover)
}
turnoverPort6 <- vector()
for (i in 1:9) {
turnoverPort6[i] <- turnover(dataWPort6[[i]], l, N)
}
turnoverPort6
View(wOptimGASnormal6MinVar)
View(wOptimGASnormal6MinVar)
View(wOptimSample6MinVar)
View(wOptimSample6MinVar)
i = 1
j = 201
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
specf <- MultiGASSpec()
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
cov <- est[[2]]
cov
est <- estSample(data = data, i = i, j = j)
cov <- est[[2]]
cov
fit <- MultiGASFit(GASSpec = specf, data = data[i:j,])
fit@Estimates$Moments$mean
nrow(fit@Estimates$Moments$mean)
nrow(fit@Estimates$Moments$mean)
fit@Estimates$Moments$mean
aux <- fit@Estimates$Moments$mean
View(aux)
fit@Estimates$Moments$cov
dim(fit@Estimates$Moments$cov)
?MultiGASFit
getMoments(Fit)
getMoments(fit)
dim(getMoments(fit))
aux <- getMoments(fit)
View(aux)
estGAS <- function(specf, data, i, j, ...){
fit <- MultiGASFit(GASSpec = specf, data = data[i:j,])
n <- nrow(fit@Estimates$Moments$mean)
meanGAS <- fit@Estimates$Moments$mean[n,]
matrixCovGAS <- fit@Estimates$Moments$cov[,,n]
return(list(mean = meanGAS, matrixCov = matrixCovGAS))
}
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortGASnormal6CRRA <- vector()
returnPortGASnormal6MeanVar <- vector()
returnPortGASnormal6MinVar <- vector()
wOptimGASnormal6CRRA <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimGASnormal6MinVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimGASnormal6MeanVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
for (i in 1:(nrow(data) - window)) {
i = i
j = i + window-1
est <- estGAS(specf = specf, data = data, i = i,
j = j, nWin = window)
mean <- est[[1]]
cov <- est[[2]]
wOptimGASnormal6CRRA[i,] <- optimWCRRA(N = N, mean = mean, cov = cov, v = v)
returnPortGASnormal6CRRA <- c(returnPortGASnormal6CRRA,
returnP(wOptim = wOptimGASnormal6CRRA[i,],
data = data, j = j))
wOptimGASnormal6MeanVar[i,] <- optimWMeanVar(N = N, mean = mean,
cov = cov, v = v)
returnPortGASnormal6MeanVar <- c(returnPortGASnormal6MeanVar,
returnP(wOptim = wOptimGASnormal6MeanVar[i,],
data = data, j = j))
wOptimGASnormal6MinVar[i,] <- optimWMinVar(N = N, mean = mean,
cov = cov, v = v)
returnPortGASnormal6MinVar <- c(returnPortGASnormal6MinVar,
returnP(wOptim = wOptimGASnormal6MinVar[i,],
data = data, j = j))
}
system("xdg-open 'https://www.youtube.com/watch?v=lPPhb49rrRk'")
#função -------------
metrics <- function(x){
meanR <- mean(x, na.rm = T)*sqrt(12)
sdR <- sd(x, na.rm = T)*sqrt(12)
SR <- meanR/sdR
return(list(meanR = meanR, sdR = sdR, SR = SR))
}
turnover <- function(w, l, N){
difW <- matrix(NA, ncol = N, nrow = l-1)
for (i in 1:(l - 1)) {
difW[i,] <- abs(w[i+1,] - w[i,])
}
turnover <- sum(difW)/(l-1)
return(turnover)
}
dataPort6 <- data.frame(returnPortEW6, returnPortGASnormal6CRRA,
returnPortGASnormal6MeanVar,
returnPortGASnormal6MinVar,
returnPortGASt6CRRA, returnPortGASt6MeanVar,
returnPortGASt6MinVar, returnPortSample6CRRA,
returnPortSample6MeanVar, returnPortSample6MinVar)
write.csv(dataPort6, file = "dataPort6")
window <- 200
#6portfolio --------------------------------
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortEW6 <- vector()
for (i in 1:(nrow(data) - window)) {
i = i
j = i + window-1
returnPortEW6 <- c(returnPortEW6, sum(data[j+1,])/N)
}
window <- 200
v <- 5
# 6 portfolio ----------------
data <- read.csv('data6.csv', header = T, na.strings = "NA")
data$date <- as.Date(paste0(as.character(data$date), '01'), format='%Y%m%d')
data <- data[data$date >= "1998-01-01" &  data$date <="2019-12-01", -1]
N <- ncol(data)
returnPortSample6CRRA <- vector()
returnPortSample6MeanVar <- vector()
returnPortSample6MinVar <- vector()
wOptimSample6CRRA <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimSample6MinVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
wOptimSample6MeanVar <- matrix(NA, nrow = (nrow(data) - window), ncol = N)
l <- nrow(data) - window
for (i in 1:l) {
i = i
j = i + window-1
est <- estSample(data = data, i = i, j = j)
mean <- est[[1]]
cov <- est[[2]]
wOptimSample6CRRA[i,] <- optimWCRRA(N = N, mean = mean, cov = cov, v = v)
returnPortSample6CRRA <- c(returnPortSample6CRRA,
returnP(wOptim =wOptimSample6CRRA[i,],
data = data, j = j))
wOptimSample6MeanVar[i,] <- optimWMeanVar(N = N, mean = mean,
cov = cov, v = v)
returnPortSample6MeanVar <- c(returnPortSample6MeanVar,
returnP(wOptim = wOptimSample6MeanVar[i,],
data = data, j = j))
wOptimSample6MinVar[i,] <- optimWMinVar(N = N, mean = mean, cov = cov, v = v)
returnPortSample6MinVar <- c(returnPortSample6MinVar,
returnP(wOptim = wOptimSample6MinVar[i,],
data = data, j = j))
}
dataPort6 <- data.frame(returnPortEW6, returnPortGASnormal6CRRA,
returnPortGASnormal6MeanVar,
returnPortGASnormal6MinVar,
returnPortGASt6CRRA, returnPortGASt6MeanVar,
returnPortGASt6MinVar, returnPortSample6CRRA,
returnPortSample6MeanVar, returnPortSample6MinVar)
dataPort6 <- data.frame(returnPortEW6, returnPortGASnormal6CRRA,
returnPortGASnormal6MeanVar,
returnPortGASnormal6MinVar,
#returnPortGASt6CRRA, returnPortGASt6MeanVar,
#returnPortGASt6MinVar,
returnPortSample6CRRA,
returnPortSample6MeanVar, returnPortSample6MinVar)
write.csv(dataPort6, file = "dataPort6")
dataWPort6 <- list(wOptimGASnormal6CRRA, wOptimGASnormal6MeanVar,
wOptimGASnormal6MinVar,
#wOptimGASt6CRRA, wOptimGASt6MeanVar, wOptimGASt6MinVar,
wOptimSample6CRRA,
wOptimSample6MeanVar, wOptimSample6MinVar)
write.csv(dataWPort6, file = "dataWPort6")
metricsPort6 <- as.data.frame(unlist(apply(dataPort6, 2, metrics)))
metricsPort6
turnoverPort6 <- vector()
for (i in 1:9) {
turnoverPort6[i] <- turnover(dataWPort6[[i]], l, N)
}
for (i in 1:6) {
turnoverPort6[i] <- turnover(dataWPort6[[i]], l, N)
}
turnoverPort6
